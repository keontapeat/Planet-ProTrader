================================================================================
“SupabaseConfig.swift: No such module ‘Supabase’” – FINAL FIX
================================================================================
The Swift compiler still can’t find the Supabase framework.  
That means the **package product isn’t linked to the GOLDEX AI target**.  
Follow these exact steps and the error will vanish.

────────────────────────────────────────────────────────────────
1.  RE-ADD / VERIFY THE PACKAGE
────────────────────────────────────────────────────────────────
1. In Xcode’s menu bar:  File ▸ Swift Packages ▸ **Add Package Dependency…**  
2. Enter:
       https://github.com/supabase-community/supabase-swift.git
3. Version rule: *Up to Next Major*.  Next →  
4. On the **Add to Target** screen MAKE SURE the checkbox next to  
   “GOLDEX AI” (and any test targets) is TICKED.  
   • If the target isn’t ticked, the module will not build for it.  
5. Finish.  Xcode resolves the package.

────────────────────────────────────────────────────────────────
2.  CLEAN BUILD FOLDER
────────────────────────────────────────────────────────────────
Shift-Cmd-K   (Product ▸ Clean Build Folder)

────────────────────────────────────────────────────────────────
3.  VERIFY LINKAGE
────────────────────────────────────────────────────────────────
Select the **GOLDEX AI** target →  
• Build Phases ▸ **Frameworks, Libraries & Embedded Content**

You should now see **Supabase.framework** listed.  
If not, press “+” → Supabase → Add.

────────────────────────────────────────────────────────────────
4.  REMOVE ANY DUPLICATE / MANUAL COPIES
────────────────────────────────────────────────────────────────
If you earlier dragged the Supabase source folders into the project, delete
those groups (Move to Trash) to avoid naming collisions.

────────────────────────────────────────────────────────────────
5.  DERIVED DATA RESET (only if error persists)
────────────────────────────────────────────────────────────────
Xcode ▸ Settings ▸ **Locations** ▸ Derived Data → arrow →  
trash the **GOLDEX_AI** folder → Close Xcode → reopen → build.

────────────────────────────────────────────────────────────────
6.  BUILD
────────────────────────────────────────────────────────────────
Cmd-B  → Build succeeds → run the app.

You’ll no longer see “No such module ‘Supabase’”.  
All `import Supabase` statements compile, and `SupabaseConfig.shared`
initialises happily.  🚀
================================================================================