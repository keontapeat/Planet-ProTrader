──────────────────────────────────────────────────────────────────────────────
🚀  FINAL STEPS – 3 COMMANDS TO SEE THE BOT LIVE
──────────────────────────────────────────────────────────────────────────────
(You already installed Docker, wrote docker-compose.yml, and saw the
Docker CLI help – great!)

1. COPY YOUR FILES INTO THE MOUNTED FOLDER
────────────────────────────────────────────
# adjust the source paths if your files live elsewhere
cp /opt/goldex-bot/goldex_bot.py   /opt/goldex-bot/bot/
cp /opt/goldex-bot/.env            /opt/goldex-bot/.env      # env file sits one level up

2. START THE CONTAINER (detached)
────────────────────────────────────────────
cd /opt/goldex-bot
docker compose up -d        # pulls image on first run, ~1-2 min

3. WATCH LIVE LOGS
────────────────────────────────────────────
docker compose logs -f       # Ctrl-C to stop tailing (bot keeps running)

You should now see something like:
  ✅ Connected — Balance: 2500.00
  [trading loop output …]

Daily Cheatsheet
────────────────
• Stop bot cleanly:          docker compose down  
• Restart after edits:       docker compose up -d --build  
• View logs anytime:         docker compose logs -f  
• Update image (future):     docker pull ghcr.io/block-spawn/mt5-python:latest

Where Things Live
─────────────────
/opt/goldex-bot/
 ├─ docker-compose.yml   ← stack definition  
 ├─ .env                 ← your demo / live credentials  
 ├─ bot/                 ← goldex_bot.py and any helpers  
 └─ logs/                ← created automatically by the container

That’s it.  Spark up, watch the log stream, and enjoy your bot in action. 🎉
──────────────────────────────────────────────────────────────────────────────