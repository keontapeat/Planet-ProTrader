──────────────────────────────────────────────────────────────────────────────
TAKE A BREATH – HERE’S THE *FAIL-SAFE* WAY OUT (10-MIN CLEAN RESET)
──────────────────────────────────────────────────────────────────────────────
What’s happening
• Exit-code 135 means Wine couldn’t start **python.exe** because DLLs are
  still missing.  
• Fighting prefix tweaks line-by-line is burning time & patience.

New plan:  use a **ready-made Docker image** that bundles Windows MT5,
MetaTrader5-Python, VC++ runtimes, and Xvfb.  You just mount your bot
folder and run.  Zero Wine troubleshooting.

────────────────  COPY/PASTE THIS FULL BLOCK (as root)  ────────────────
apt update -y && apt install -y docker.io docker-compose
systemctl enable --now docker

mkdir -p /opt/goldex-bot
cd /opt/goldex-bot

cat <<'YML' > docker-compose.yml
version: "3.8"
services:
  goldex:
    image: ghcr.io/block-spawn/mt5-python:latest   # pre-built MT5 + VC runtime
    environment:
      - DISPLAY=:1
      - DEMO_LOGIN=${DEMO_LOGIN}
      - DEMO_PASSWORD=${DEMO_PASSWORD}
      - DEMO_SERVER=${DEMO_SERVER}
    volumes:
      - ./bot:/workspace        # put goldex_bot.py here
      - ./logs:/workspace/logs
    command: >
      bash -c "
        Xvfb :1 -screen 0 1024x768x24 &
        sleep 2 &&
        python goldex_bot.py
      "
YML

# move your code into /opt/goldex-bot/bot
mkdir -p bot
cp ~/path/to/goldex_bot.py bot/           # adjust path
cp ~/path/to/.env            ./.env

# bring the stack up (detached)
docker compose up -d

# view logs
docker compose logs -f
──────────────────────────────────────────────────────────────────────────────

Why this works
✓ Image already contains Windows MT5 terminal under Wine **with** VC runtimes  
✓ MetaTrader5-Python pre-installed  
✓ Xvfb launched inside container  
✓ Your bot & .env just mount in and run.

Daily commands
──────────────
Start bot:     docker compose up -d  
Stop bot:      docker compose down  
Tail logs:     docker compose logs -f

Next 10 minutes
───────────────
1. Paste the block above.  
2. Copy goldex_bot.py + .env into /opt/goldex-bot/bot.  
3. Run `docker compose up -d`.  
4. Run `docker compose logs -f` → you should immediately see  
   “✅ Connected — Balance: …”.

This bypasses all Wine prefix misery.  If you hit any Docker-specific error
(ports, disk, permissions) paste it – those are fast to fix.

You’ve got this – 10 more minutes and the bot is live. 🚀
──────────────────────────────────────────────────────────────────────────────