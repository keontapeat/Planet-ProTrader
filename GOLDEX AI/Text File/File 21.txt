# GOLDEX AI TRADING SYSTEM - VPS SETUP DESCRIPTION

## 🚀 GOLDEX AI TRADING APPLICATION OVERVIEW

### What is GOLDEX AI?
GOLDEX AI is an ultra-aggressive, high-frequency trading Expert Advisor (EA) for MetaTrader 5 (MT5) designed to generate consistent profits through automated forex trading. The system is built for maximum profitability with sophisticated risk management and multiple trading strategies.

### Key Features:
- **Ultra Aggressive Trading**: Places trades every 30 seconds to 2 hours based on user preference
- **24/7 Automated Trading**: Never stops trading - constantly making money around the clock
- **Progressive Profit System**: After 5 consecutive wins, targets 20x profit on the next trade
- **Multi-Strategy Approach**: Scalping, trend following, breakout, momentum, and volatility trading
- **Smart Risk Management**: Dynamic position sizing with martingale and recovery systems
- **Real-time Notifications**: Push notifications and alerts for all trading activities
- **Flip Mode**: Aggressive growth targeting $1,000 → $100,000 in 7 days

### Trading Strategies:
1. **Instant Scalping**: 5-8 point quick profits on micro-movements
2. **Trend Following**: Multi-timeframe analysis (M1, M5, M15, H1)
3. **Breakout Trading**: Volatility-based entry signals
4. **Momentum Trading**: Surge detection and momentum continuation
5. **Hedging System**: Protective trades during drawdown periods
6. **Recovery Mode**: Aggressive comeback strategy after losses

### Technical Specifications:
- **Platform**: MetaTrader 5 (MT5)
- **Language**: MQL5 (MetaQuotes Language 5)
- **Timeframes**: M1, M5, M15, M30, H1, H4, D1
- **Indicators**: RSI, MACD, Moving Averages, ATR, Bollinger Bands, Momentum
- **Risk Management**: 2-8% per trade with progressive sizing
- **Max Positions**: Up to 5 simultaneous trades
- **Trade Frequency**: Customizable from 30 seconds to 2 hours

---

## 🛠️ COMPLETE VPS SETUP SCRIPT FOR LINODE

### Server Specifications:
- **OS**: Ubuntu 22.04 LTS
- **CPU**: 1 CPU Core
- **RAM**: 2GB RAM
- **Storage**: 50GB SSD
- **Location**: US, Chicago, IL

### Complete Automated Setup Script:


bash
#!/bin/bash

# GOLDEX AI VPS SETUP SCRIPT
# This script will install and configure everything needed for MT5 trading

echo "🚀 GOLDEX AI VPS SETUP STARTING..."
echo "=================================="

# Update system
echo "📦 Updating system packages..."
sudo apt update && sudo apt upgrade -y

# Install essential packages
echo "🔧 Installing essential packages..."
sudo apt install -y curl wget git unzip software-properties-common apt-transport-https ca-certificates gnupg lsb-release

# Install Wine (for running MT5 on Linux)
echo "🍷 Installing Wine for MT5 compatibility..."
sudo dpkg --add-architecture i386
wget -nc https://dl.winehq.org/wine-builds/winehq.key
sudo apt-key add winehq.key
sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
sudo apt update
sudo apt install -y winehq-stable

# Configure Wine
echo "⚙️ Configuring Wine environment..."
winecfg

# Install Xvfb (Virtual Display)
echo "🖥️ Installing virtual display..."
sudo apt install -y xvfb

# Create MT5 directory
echo "📁 Creating MT5 directory..."
mkdir -p ~/mt5
cd ~/mt5

# Download MetaTrader 5
echo "📥 Downloading MetaTrader 5..."
wget https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/mt5setup.exe

# Install MT5
echo "🔧 Installing MetaTrader 5..."
xvfb-run wine mt5setup.exe

# Create GOLDEX AI EA directory
echo "📁 Creating EA directory..."
mkdir -p ~/.wine/drive_c/users/$USER/AppData/Roaming/MetaQuotes/Terminal/*/MQL5/Experts/

# Create systemd service for MT5
echo "⚙️ Creating MT5 service..."
sudo tee /etc/systemd/system/mt5.service > /dev/null <<EOF
[Unit]
Description=MetaTrader 5 Trading Platform
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=/home/$USER/mt5
Environment=DISPLAY=:99
ExecStartPre=/usr/bin/Xvfb :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset
ExecStart=/usr/bin/wine /home/$USER/.wine/drive_c/Program\ Files/MetaTrader\ 5/terminal64.exe
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# Install monitoring tools
echo "📊 Installing monitoring tools..."
sudo apt install -y htop iotop nethogs

# Install firewall
echo "🛡️ Configuring firewall..."
sudo ufw enable
sudo ufw allow 22/tcp
sudo ufw allow 443/tcp
sudo ufw allow 80/tcp

# Install fail2ban for security
echo "🔒 Installing security tools..."
sudo apt install -y fail2ban

# Create backup script
echo "💾 Creating backup script..."
tee ~/backup_mt5.sh > /dev/null <<EOF
#!/bin/bash
DATE=\$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="~/backups/mt5_\$DATE"
mkdir -p \$BACKUP_DIR
cp -r ~/.wine/drive_c/users/\$USER/AppData/Roaming/MetaQuotes/ \$BACKUP_DIR/
echo "Backup completed: \$BACKUP_DIR"
EOF

chmod +x ~/backup_mt5.sh

# Create cron job for automatic backups
echo "⏰ Setting up automatic backups..."
(crontab -l 2>/dev/null; echo "0 */6 * * * /home/$USER/backup_mt5.sh") | crontab -

# Install log rotation
echo "📝 Setting up log rotation..."
sudo tee /etc/logrotate.d/mt5 > /dev/null <<EOF
/home/$USER/.wine/drive_c/users/$USER/AppData/Roaming/MetaQuotes/Terminal/*/Logs/*.log {
    daily
    rotate 7
    compress
    delaycompress
    missingok
    notifempty
    create 644 $USER $USER
}
EOF

# Create monitoring script
echo "📊 Creating monitoring script..."
tee ~/monitor_mt5.sh > /dev/null <<EOF
#!/bin/bash
echo "🚀 GOLDEX AI MT5 MONITORING DASHBOARD"
echo "====================================="
echo "📅 Date: \$(date)"
echo "💻 CPU Usage: \$(top -bn1 | grep "Cpu(s)" | awk '{print \$2}' | cut -d'%' -f1)%"
echo "🧠 Memory Usage: \$(free -m | awk 'NR==2{printf "%.2f%%", \$3*100/\$2 }')"
echo "💾 Disk Usage: \$(df -h / | awk 'NR==2{print \$5}')"
echo "🌐 Network: \$(netstat -i | grep -E '^eth0|^enp' | awk '{print \$1 ": " \$3 " RX / " \$7 " TX"}')"
echo "🔄 MT5 Status: \$(ps aux | grep -i metatrader | grep -v grep | wc -l) processes"
echo "📊 Active Connections: \$(netstat -an | grep :443 | wc -l)"
echo "====================================="
EOF

chmod +x ~/monitor_mt5.sh

# Create GOLDEX AI EA file
echo "🤖 Creating GOLDEX AI EA..."
tee ~/GOLDEX_AI_ULTRA.mq5 > /dev/null <<'EOF'
//+------------------------------------------------------------------+
//|                                    GOLDEX_AI_ULTRA_VPS.mq5      |
//|                                  Copyright 2024, GOLDEX AI Team |
//|                                             https://goldexai.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, GOLDEX AI Team"
#property link      "https://goldexai.com"
#property version   "5.01"
#property strict

// VPS Optimized Version - Ultra Aggressive Trading System
// This EA is designed for 24/7 VPS operation with maximum profitability

input group "=== VPS OPTIMIZATION ==="
input bool EnableVPSMode = true;
input bool EnableAutoRestart = true;
input int ConnectionTimeout = 30;
input bool EnableEmailAlerts = false;
input string EmailAddress = "your.email@gmail.com";

input group "=== TRADE FREQUENCY ==="
input int TradeFrequencySeconds = 300; // 5 minutes default
input int MaxTradesPerHour = 12;
input int MaxTradesPerDay = 288;
input bool Enable24_7_Trading = true;

input group "=== RISK MANAGEMENT ==="
input double RiskPercentage = 8.0;
input double MaxRiskPercentage = 15.0;
input double StopLossPoints = 35.0;
input double TakeProfitPoints = 550.0;

input group "=== PROGRESSIVE SYSTEM ==="
input bool EnableProgressiveProfit = true;
input int WinStreakForBonus = 5;
input double BonusMultiplier = 20.0;
input bool EnableMartingale = true;
input double MartingaleMultiplier = 1.5;

// Global Variables
int TotalTrades = 0;
int WinningTrades = 0;
int ConsecutiveWins = 0;
int ConsecutiveLosses = 0;
double AccountBalance = 0.0;
datetime LastTradeTime = 0;
datetime LastStatusUpdate = 0;

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
{
    Print("🚀 GOLDEX AI VPS ULTRA AGGRESSIVE EA INITIALIZED");
    Print("💰 Account Balance: $", AccountInfoDouble(ACCOUNT_BALANCE));
    Print("🔥 VPS Mode: ", EnableVPSMode ? "ENABLED" : "DISABLED");
    Print("⏰ Trade Frequency: Every ", TradeFrequencySeconds, " seconds");
    Print("🎯 24/7 Trading: ", Enable24_7_Trading ? "ACTIVE" : "INACTIVE");
    Print("🎰 Progressive Profit: ", EnableProgressiveProfit ? "ON" : "OFF");
    Print("📧 Email Alerts: ", EnableEmailAlerts ? "ON" : "OFF");
    
    AccountBalance = AccountInfoDouble(ACCOUNT_BALANCE);
    
    if(EnableVPSMode)
    {
        Print("🌐 VPS MODE ACTIVATED - MAXIMUM PERFORMANCE");
        Print("⚡ Connection Timeout: ", ConnectionTimeout, " seconds");
        Print("🔄 Auto Restart: ", EnableAutoRestart ? "ENABLED" : "DISABLED");
    }
    
    return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
{
    // VPS Status Update
    if(TimeCurrent() - LastStatusUpdate > 3600) // Every hour
    {
        UpdateVPSStatus();
        LastStatusUpdate = TimeCurrent();
    }
    
    // Check if it's time to trade
    if(TimeCurrent() - LastTradeTime >= TradeFrequencySeconds)
    {
        ExecuteAggressiveTrade();
    }
    
    // Monitor all positions
    MonitorPositions();
}

//+------------------------------------------------------------------+
//| Execute Aggressive Trade                                         |
//+------------------------------------------------------------------+
void ExecuteAggressiveTrade()
{
    if(!Enable24_7_Trading)
    {
        // Check trading hours if not 24/7
        MqlDateTime dt;
        TimeCurrent(dt);
